{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/blogposts/blogposts.component.css","webpack:///./src/app/components/blogposts/blogposts.component.html","webpack:///./src/app/components/blogposts/blogposts.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guards/auth.guards.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/blogpost.service.ts","webpack:///./src/app/services/chat.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n\"","module.exports = \"<app-navbar></app-navbar>\\n<ng-flash-message></ng-flash-message>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgFlashMessagesModule } from 'ng-flash-messages';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { BlogpostsComponent } from './components/blogposts/blogposts.component';\n\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guards';\nimport { BlogpostService } from './services/blogpost.service';\nimport { ChatService } from './services/chat.service';\n\nconst appRoutes: Routes = [\n  {path:'', component:HomeComponent},\n  {path:'register', component:RegisterComponent},\n  {path:'login', component:LoginComponent},\n  {path:'dashboard', component:DashboardComponent, canActivate:[AuthGuard]},\n  {path:'profile', component:ProfileComponent, canActivate:[AuthGuard]},\n  {path:'blogposts', component:BlogpostsComponent, canActivate:[AuthGuard]}\n]\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    DashboardComponent,\n    HomeComponent,\n    BlogpostsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes),\n    NgFlashMessagesModule.forRoot()\n  ],\n  providers: [ValidateService, AuthService, AuthGuard, BlogpostService, ChatService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".header{\\n\\tbackground-image: linear-gradient(rgba(0,0,0,0.5),rgba(0,0,0,0.5)), url('background1.png');\\n\\tbackground-size: cover;\\n\\tbackground-position: center;\\n\\tbackground-repeat: no-repeat;\\n\\tbackground-attachment: fixed;\\n\\tmin-height: 900px\\n}\\n\\nbody {font-family: Arial, Helvetica, sans-serif;}\\n\\n* {box-sizing: border-box;}\\n\\n/* width */\\n\\n::-webkit-scrollbar {\\n    width: 5px;\\n}\\n\\n/* Track */\\n\\n::-webkit-scrollbar-track {\\n    box-shadow: inset 0 0 5px grey;\\n    border-radius: 10px;\\n}\\n\\n/* Handle */\\n\\n::-webkit-scrollbar-thumb {\\n    background: green;\\n    border-radius: 10px;\\n}\\n\\n/* Handle on hover */\\n\\n::-webkit-scrollbar-thumb:hover {\\n    background: red;\\n}\\n\\n/* Button used to open the chat form - fixed at the bottom of the page */\\n\\n.open-button {\\n  background-color: green;\\n  color: white;\\n  padding: 7px 20px;\\n  border: none;\\n  cursor: pointer;\\n  opacity: 1;\\n  position: fixed;\\n  bottom: 23px;\\n  right: 28px;\\n  width: 200px;\\n\\tfont-size: 20px;\\n}\\n\\n/* The popup chat - hidden by default */\\n\\n.chat-popup {\\n  display: none;\\n  position: fixed;\\n  bottom: 0;\\n  right: 15px;\\n  border: 3px solid #f1f1f1;\\n  z-index: 9;\\n}\\n\\n.form-container1 {\\n\\tdisplay: inline-block;\\n  background-color: skyblue;\\n\\tmin-height: 487px;\\n\\tmax-height: 487px;\\n\\toverflow: auto;\\n}\\n\\n/* Add styles to the form container */\\n\\n.form-container {\\n\\tdisplay: inline-block;\\n\\tvertical-align: top;\\n  max-width: 300px;\\n  padding: 10px;\\n  background-color: white;\\n}\\n\\n/* Full-width textarea */\\n\\n.form-container textarea {\\n  width: 100%;\\n  padding: 15px;\\n  margin: 5px 0 22px 0;\\n  border: none;\\n  background: #f1f1f1;\\n  resize: none;\\n}\\n\\n/* When the textarea gets focus, do something */\\n\\n.form-container textarea:focus {\\n  background-color: #ddd;\\n  outline: none;\\n}\\n\\n.form-container .messages {\\n\\twidth: 100%;\\n\\tpadding: 15px;\\n\\tmargin: 5px 0 22px 0;\\n\\tborder: none;\\n\\tresize: none;\\n\\tmin-height: 160px;\\n  background-color: white;\\n\\toutline: none;\\n}\\n\\n/* Set a style for the submit/send button */\\n\\n.form-container .btn {\\n  background-color: #4CAF50;\\n  color: white;\\n  padding: 8px 10px;\\n  border: none;\\n  cursor: pointer;\\n  margin-bottom:10px;\\n  opacity: 0.8;\\n\\tsize: 5px;\\n}\\n\\n/* Add a red background color to the cancel button */\\n\\n.form-container .cancel {\\n  background-color: red;\\n\\tmargin-left: 4px;\\n}\\n\\n/* Add some hover effects to buttons */\\n\\n.form-container .btn:hover, .open-button:hover {\\n  opacity: 1;\\n}\\n\"","module.exports = \"<div class=\\\"jumbotron header text-center\\\" style=\\\"padding:30px\\\">\\n    <!-- Heading -->\\n    <h1 class=\\\"display-5\\\">A Forum and Chat Application</h1>\\n    <p class=\\\"lead\\\">Welcome to TheOnlineForum, an app built using MEAN stack where users can share posts and chat online.</p>\\n    <hr class=\\\"my-4\\\">\\n\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <!-- User info Region-->\\n        <div class=\\\"col-lg-4\\\">\\n          <h2 class=\\\"text-light\\\" style=\\\"text-shadow:1.5px 1.5px black;\\\">User Info</h2>\\n          <div class=\\\"jumbotron bg-info text-dark\\\" align=\\\"center\\\" *ngIf='user' style=\\\"height:260px;overflow:hidden;padding:20px;\\\">\\n            <img src=\\\"../../../assets/logo.png\\\" width=\\\"50\\\" height=\\\"50\\\">\\n            <hr class=\\\"my-4\\\">\\n            <p>USERNAME: <em>{{user.username}}</em></p>\\n            <p>NAME: <em>{{user.name}}</em></p>\\n            <p>EMAIL: <em>{{user.email}}</em></p>\\n          </div>\\n        </div>\\n        <!-- Create Post region-->\\n        <div class=\\\"col-lg-8\\\">\\n          <h2 class=\\\"text-light\\\" style=\\\"text-shadow:1.5px 1.5px black;\\\">Create Post</h2>\\n          <form (submit)=\\\"createPost()\\\">\\n            <div class=\\\"form-group\\\">\\n              <input name='title' type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Post Title\\\" [(ngModel)]=\\\"title\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <textarea name=\\\"info\\\" class=\\\"form-control\\\" rows=\\\"8\\\" cols=\\\"80\\\" placeholder=\\\"Post Description\\\" [(ngModel)]=\\\"info\\\"></textarea>\\n            </div>\\n            <div align=\\\"right\\\">\\n              <input type=\\\"submit\\\" name=\\\"Post\\\" class=\\\"btn btn-info\\\" value=\\\"Post\\\" style=\\\"margin:5px\\\">\\n              <input (click)=\\\"updatePost()\\\" type=\\\"button\\\" name=\\\"Update\\\" class=\\\"btn btn-success\\\" value=\\\"Update\\\" style=\\\"margin:5px\\\">\\n            </div>\\n          </form>\\n        </div>\\n\\n        <!-- Show Posts-->\\n        <h2 class=\\\"text-light\\\" align=\\\"center\\\" style=\\\"text-shadow:1.5px 1.5px black;\\\">Browse Posts</h2>\\n        <div class=\\\"card-columns\\\">\\n  \\t\\t\\t\\t<div *ngFor= \\\"let post of posts\\\">\\n  \\t\\t\\t\\t\\t<div class=\\\"card bg-primary mb-3\\\" style=\\\"max-width: 25rem;\\\">\\n  \\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n                <h6 class=\\\"card-header text-dark\\\" align=\\\"left\\\">\\n                  Posted by: {{post.op}}\\n                  <button style=\\\"margin-left:1em;\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"openUserInChat(post.op)\\\">[open chat]</button>\\n                  <button (click)=\\\"deletePost(post)\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n                </h6>\\n        \\t\\t\\t\\t<h4 class=\\\"card-title text-dark\\\" style=\\\"margin-top:15px;\\\">\\n                    {{post.title}}\\n  \\t\\t\\t\\t\\t\\t\\t\\t<em>\\n                    <h6 class=\\\"text-dark\\\">\\n                      Posted on:  {{post.posted}}\\n                      <button (click)=\\\"getPostToEdit(post)\\\" class=\\\"btn btn-primary btn-sm\\\">EDIT</button>\\n                    </h6>\\n                  </em>\\n  \\t\\t\\t\\t\\t\\t\\t</h4>\\n                <hr class=\\\"my-4\\\">\\n        \\t\\t\\t  <p class=\\\"card-text text-dark\\\">\\n  \\t\\t\\t\\t\\t\\t\\t  {{post.info}}\\n  \\t\\t\\t\\t\\t\\t  </p>\\n      \\t\\t\\t\\t</div>\\n    \\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t</div>\\n  \\t\\t\\t</div>\\n\\n      </div>\\n    </div>\\n\\n    <!-- chat box pop up-->\\n    <button class=\\\"open-button\\\" (click)=\\\"openForm()\\\">Chat</button>\\n    <div class=\\\"chat-popup\\\" id=\\\"myForm\\\">\\n      <!-- users chat list -->\\n      <div class=\\\"form-container1 list-group\\\">\\n        <li class=\\\"btn\\\">USERS</li>\\n        <ul *ngFor= \\\"let item of usersList\\\">\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"openUserInChat(item.username)\\\" style=\\\"margin-right:20px;\\\">{{item.username}}</button>\\n        </ul>\\n\\n      </div>\\n      <div class=\\\"form-container\\\">\\n        <h2>Chat</h2>\\n        <label for=\\\"msg\\\"><b>Messages</b></label>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"well\\\" id=\\\"allMessages\\\" align=\\\"left\\\" style=\\\"height:200px; padding:15px; width:270px ;background-color:#D9D9D9; margin-left:20px; word-wrap:break-word; overflow:auto;\\\">\\n                <div style=\\\"margin-bottom:10px;\\\">\\n                <div *ngFor=\\\"let item of messageArray\\\">\\n                <span><strong>{{item.user}} : </strong> {{item.message}}</span>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div align=\\\"left\\\" style=\\\"margin-top:5px\\\"><strong>To: {{targetUsername}}</strong></div>\\n        <textarea (keydown.Enter)=\\\"onKeydown()\\\" [(ngModel)]=\\\"messageText\\\" name=\\\"messageText\\\" placeholder=\\\"Type message..\\\" id=\\\"message\\\" required></textarea>\\n        <button type=\\\"button\\\" (click)=\\\"sendMessage()\\\" class=\\\"btn\\\">send</button>\\n\\n        <button type=\\\"button\\\" class=\\\"btn\\\" id=\\\"offlineToggle\\\" (click)=\\\"toggleStatus()\\\" style=\\\"margin-left:4px;\\\">Online</button>\\n        <button type=\\\"button\\\" class=\\\"btn cancel\\\" (click)=\\\"closeForm()\\\">close</button>\\n      </div>\\n    </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BlogpostService } from '../../services/blogpost.service';\nimport { AuthService } from '../../services/auth.service';\nimport { ChatService } from '../../services/chat.service';\n\n@Component({\n  selector: 'app-blogposts',\n  templateUrl: './blogposts.component.html',\n  styleUrls: ['./blogposts.component.css']\n})\n\nexport class BlogpostsComponent implements OnInit {\n\n  // post properties\n  title: String;\n  info: String;\n  posts: any;\n  postId: String;\n  user: any;\n\n  // chat properties\n  targetUsername: String = null;\n  room:String;\n  userStatus: Boolean = false;\n  messageText:String;\n  messageArray:Array<{user:String,message:String}> = [];\n  usersList:any;\n\n  constructor(\n    public blogpostService:BlogpostService,\n    public authService:AuthService,\n    public chatService:ChatService\n  ) { }\n\n  ngOnInit() {\n    // for handling posts\n    this.getAllPosts();\n    this.authService.getUserProfile().subscribe(profile => {\n      this.user = profile.user;\n    });\n\n    // for handling chats\n    this.getAllUsersList();\n\n    this.chatService.newUserJoined()\n    .subscribe(data=> this.messageArray.push(data));\n\n    this.chatService.userLeftRoom()\n    .subscribe(data=>this.messageArray.push(data));\n\n    this.chatService.newMessageReceived()\n    .subscribe(data=>this.messageArray.push(data));\n  }\n\n  // chat box pop up\n  openForm() {\n    document.getElementById(\"myForm\").style.display = \"block\";\n    document.getElementById(\"offlineToggle\").style.background = \"green\";\n    this.userStatus = true;\n    this.join();\n  }\n\n  closeForm() {\n    document.getElementById(\"myForm\").style.display = \"none\";\n  }\n\n  openUserInChat(op){\n    if(this.user.username != op){\n      this.targetUsername = op;\n      this.openForm();\n    }\n  }\n\n  // go offline or online\n  toggleStatus(){\n    if(this.userStatus){\n      document.getElementById(\"offlineToggle\").style.background = \"#D9D9D9\";\n      this.userStatus = false;\n      this.leave();\n    } else {\n      this.getAllUsersList();\n      document.getElementById(\"offlineToggle\").style.background = \"green\";\n      this.userStatus = true;\n      this.join();\n    }\n\n  }\n\n  // join chat room\n  join(){\n    if(this.targetUsername < this.user.username){\n      this.room = this.targetUsername + this.user.username;\n    } else {\n      this.room = this.user.username + this.targetUsername;\n    }\n    //console.log(this.room);\n    //this.room = this.targetUsername;\n    this.chatService.joinRoom({user:this.user.username, room:this.room});\n  }\n\n  // leave chat room\n  leave(){\n    this.chatService.leaveRoom({user:this.user.username, room:this.room});\n  }\n\n  // send message to chat room\n  sendMessage(){\n    if(this.userStatus && this.targetUsername!=null){\n      this.chatService.sendMessage({user:this.user.username, room:this.room, message:this.messageText});\n      this.messageText = null;\n      const element = document.getElementById(\"allMessages\");\n      element.scrollTop = element.scrollHeight;\n    } else {\n      //console.log('You are offline or receiving user not selected');\n    }\n  }\n\n  // get all users list\n  getAllUsersList(){\n    this.chatService.getAllUsernames().subscribe(data => {\n      if(data.success){\n        this.usersList = data.data;\n        //console.log(this.usersList);\n      } else {\n        //console.log('Unable to get userlist');\n      }\n    });\n  }\n\n  // press enter to send chat\n  onKeydown(){\n      this.sendMessage();\n  }\n  // get all posts\n  getAllPosts(){\n    this.blogpostService.getAllUserPosts().subscribe(data => {\n      if(data.success){\n        this.posts = data.data;\n      } else {\n        //console.log('Unable to get posts');\n      }\n    });\n  }\n\n  // create new post\n  createPost(){\n    const newPost = {\n      title: this.title,\n      info: this.info,\n      op: this.user.username\n    }\n    this.blogpostService.createUserPost(newPost).subscribe(data =>{\n      if(data.success){\n        this.getAllPosts();\n        this.title = null;\n        this.info = null;\n      } else {\n        //console.log('Error creating post');\n      }\n    });\n  }\n\n  deletePost(post){\n    if(post.op == this.user.username){\n      const postId = post._id;\n      this.blogpostService.deleteUserPost(postId).subscribe(data => {\n        if(data.success){\n          this.getAllPosts();\n        } else {\n          //console.log('delete error');\n        }\n      });\n    }\n  }\n\n  getPostToEdit(post){\n    if(post.op == this.user.username){\n      const postId = post._id;\n      this.blogpostService.getUserPost(postId).subscribe(data=>{\n        if(data.success){\n          this.title = data.post.title;\n          this.info = data.post.info;\n          this.postId = data.post._id;\n        } else {\n          //console.log('Edit error');\n        }\n      });\n    }\n  }\n\n  updatePost(){\n    const updatedPost = {\n      title: this.title,\n      info: this.info\n    }\n    this.blogpostService.updateUserPost(this.postId, updatedPost).subscribe(data=>{\n      if(data.success){\n        this.getAllPosts();\n        this.title = null;\n        this.info = null;\n      }\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" style=\\\"margin-top:20px\\\">\\n  <h2> Dashboard </h2>\\n  <p> Welcome to user dashboard</p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".header{\\n\\tbackground-image: linear-gradient(rgba(0, 0, 0, 0.8),rgba(0, 0, 0, 0.8)), url('background1.png');\\n\\tbackground-size: cover;\\n\\tbackground-position: center;\\n\\tbackground-repeat: no-repeat;\\n\\tbackground-attachment: fixed;\\n\\tmin-height: 900px\\n}\\n\"","module.exports = \"<div class=\\\"header jumbotron text-center\\\">\\n    <h1 class=\\\"display-3\\\">A Forum and Chat Application</h1>\\n    <p class=\\\"lead\\\">Welcome to TheOnlineForum, an app built using Mean Stack where users can share posts and chat online.</p>\\n    <hr class=\\\"my-4\\\">\\n    <p class=\\\"lead\\\">Please login to browse forum or register if you are new user</p>\\n    <button style=\\\"margin:5px\\\" class=\\\"btn btn-primary btn-lg\\\" routerLink=\\\"/login\\\">LOGIN</button>\\n    <button style=\\\"margin:5px\\\" class=\\\"btn btn-success btn-lg\\\" routerLink=\\\"/register\\\">REGISTER</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" style=\\\"margin-top:20px\\\">\\n<h2 class=\\\"page-header\\\">Login</h2>\\n<form (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>USERNAME</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>PASSWORD</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Submit\\\">\\n</form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: String;\n  password: String;\n\n  constructor(\n    public authService: AuthService,\n    public router: Router,\n    private ngFlashMessageService: NgFlashMessageService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.loginUser(user).subscribe(data =>{\n      if(data.success){\n        this.authService.storeUserData(data.token, data.user);\n        this.ngFlashMessageService.showFlashMessage({messages:[\"You are logged in\"], timeout: 500, type: 'success'});\n        this.router.navigate(['/dashboard']);\n      } else {\n        this.ngFlashMessageService.showFlashMessage({messages:[\"Unable to log in\"], timeout: 3000, type: 'danger'});\n        this.router.navigate(['/login']);\n      }\n    });\n\n\n  }\n\n}\n","module.exports = \".logo\\n{\\n\\theight: 50px;\\n\\tpadding: 2px 10px;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard </a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile </a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/blogposts']\\\">Browse </a>\\n      </li>\\n    </ul>\\n\\n    <ul class=\\\"navbar-nav navbar-right\\\">\\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\n         <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n         <button class=\\\"btn btn-danger my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n      </form>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.loggedIn()\\\" routerLinkActive=\\\"active\\\" routerLinkActiveOptions=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Sign In</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.loggedIn()\\\" routerLinkActive=\\\"active\\\" routerLinkActiveOptions=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"onLogOutClick()\\\" routerLink=\\\"#\\\">Logout</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { NgFlashMessageService } from 'ng-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService,\n    public router: Router,\n    private ngFlashMessageService: NgFlashMessageService\n  ) {}\n\n  ngOnInit() {\n  }\n\n  onLogOutClick(){\n    this.authService.logOutUser();\n    this.ngFlashMessageService.showFlashMessage({messages:[\"You are logged out\"], type: 'success'});\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","module.exports = \".header{\\n\\tbackground-image: linear-gradient(rgba(0,0,0,0.6),rgba(0,0,0,0.6)), url('background1.png');\\n\\tbackground-size: cover;\\n\\tbackground-position: center;\\n\\tbackground-repeat: no-repeat;\\n\\tbackground-attachment: fixed;\\n\\tmin-height: 900px\\n}\\n\"","module.exports = \"<div *ngIf='user' class=\\\"container\\\">\\n  <div class=\\\"jumbotron\\\" style=\\\"margin-top:20px\\\">\\n    <h2>USER PROFILE INFO</h2>\\n    <hr class=\\\"my-4\\\">\\n    <p class=\\\"lead\\\"><em><strong>NAME:</strong></em> {{user.name}}</p>\\n    <p class=\\\"lead\\\"><em><strong>USERNAME:</strong></em> {{user.username}}</p>\\n    <p class=\\\"lead\\\"><em><strong>EMAIL:</strong></em> {{user.email}}</p>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user:Object;\n\n  constructor(\n    public authService: AuthService,\n    public router: Router\n  ) { }\n\n  ngOnInit() {\n    this.authService.getUserProfile().subscribe(profile => {\n      this.user = profile.user;\n    },\n    err => {\n      //console.log('error');\n      return false;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" style=\\\"margin-top:20px\\\">\\n<h2 class=\\\"page-header\\\">Register</h2>\\n<form (submit)=\\\"onRegisterSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>NAME</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>EMAIL</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>USERNAME</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>PASSWORD</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Submit\\\">\\n</form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  constructor(\n    private validateService:ValidateService,\n    private ngFlashMessageService: NgFlashMessageService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit(){\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    }\n\n    // validate all fields\n    if(!this.validateService.validateRegistration(user)){\n      this.ngFlashMessageService.showFlashMessage({messages:[\"Please fill in all fields\"], timeout: 3000, type: 'danger'});\n      return false;\n    }\n    // validate email\n    if(!this.validateService.validateEmail(user.email)){\n      this.ngFlashMessageService.showFlashMessage({messages:[\"Please use valid email\"], timeout: 3000, type: 'danger'});\n      return false;\n    }\n    // successful registration\n    this.authService.registerUser(user).subscribe(data =>{\n      if(data.success){\n        this.ngFlashMessageService.showFlashMessage({messages:[\"You are registered\"], type: 'success'});\n        this.router.navigate(['/login']);\n      } else {\n        this.ngFlashMessageService.showFlashMessage({messages:[\"Something went wrong\"], timeout: 3000, type: 'danger'});\n        this.router.navigate(['/register']);\n      }\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService:AuthService, private router:Router){}\n\n  canActivate(){\n    if(this.authService.loggedIn()){\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  token: any;\n  user: any;\n\n  constructor(public http:Http) { }\n\n  registerUser(user){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/register', user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  loginUser(user){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/authenticate', user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.token = token;\n    this.user = user;\n  }\n\n  logOutUser(){\n    this.user = null;\n    this.token = null;\n    localStorage.clear();\n  }\n\n  getUserProfile(){\n    let headers = new Headers();\n    this.getToken();\n    headers.append('Authorization', this.token);\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('users/profile', {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  getToken(){\n    const token = localStorage.getItem('id_token');\n    this.token = token;\n  }\n\n  public loggedIn(){\n    if (localStorage.id_token == undefined){\n      return false;\n    } else {\n      const helper = new JwtHelperService();\n      return !helper.isTokenExpired(localStorage.id_token);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogpostService {\n\n  post: any;\n\n  constructor(public http:Http) { }\n\n  createUserPost(post){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('blogposts', post, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  getAllUserPosts(){\n    return this.http.get('blogposts/all')\n      .pipe(map(res => res.json()));\n  }\n\n  deleteUserPost(postId){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.delete('blogposts/'+postId, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  getUserPost(postId){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('blogposts/'+postId, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  updateUserPost(postId, post){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.put('blogposts/'+postId, post, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { Observable } from 'rxjs';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  constructor(public http:Http) {}\n\n  private socket = io();\n\n  joinRoom(data){\n      this.socket.emit('join',data);\n  }\n\n  newUserJoined(){\n      let observable = new Observable<{user:String, message:String}>(observer=>{\n          this.socket.on('new user joined', (data)=>{\n            observer.next(data);\n          });\n          return () => {this.socket.disconnect();}\n      });\n      return observable;\n  }\n\n\n  leaveRoom(data){\n      this.socket.emit('leave',data);\n  }\n\n  userLeftRoom(){\n      let observable = new Observable<{user:String, message:String}>(observer=>{\n          this.socket.on('left room', (data)=>{\n              observer.next(data);\n          });\n          return () => {this.socket.disconnect();}\n      });\n\n      return observable;\n  }\n\n  sendMessage(data)\n  {\n      this.socket.emit('message',data);\n  }\n\n  newMessageReceived(){\n      let observable = new Observable<{user:String, message:String}>(observer=>{\n          this.socket.on('new message', (data)=>{\n              observer.next(data);\n          });\n          return () => {this.socket.disconnect();}\n      });\n\n      return observable;\n  }\n\n  getAllUsernames(){\n    return this.http.get('users/all')\n      .pipe(map(res => res.json()));\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegistration(user){\n    if(user.name==undefined||user.email==undefined||user.username==undefined||user.password==undefined){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}